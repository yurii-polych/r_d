    Homework 38.

1. В репозиторії із домашніми завданнями створити окрему директорію django.

2. В директорії django створити virtualenv, активувати його та встановити Django.

3. Створити Django проєкт за допомогою django-admin.

4. Створити .env, куди винести всі чутливі значення із налаштувань.

В налаштуваннях використовувати змінні середовища, а не "сирі" значення.
Використати бібліотеку python_dotenv

5. Створити файл requirements.txt, де має міститися інформація про встановлені пакети вашого віртуального середовища.

6. Директорія з віртуальним середовищем, файл бази даних, а також файл .env не мають бути запушені на репозиторій.
    Для цього їх можна додати в .gitignore.

7. Створити application user

8. Створити view, що має бути доступна за /users і повертати текст "Hello, users!"

9. Застосувати стандартні міграції для проєкту.

10. Створити суперадміна, щоб отримати доступ до адмін-панелі django (http://localhost:8000/admin)

========================================================================================================================

    Homework 39.

1. Створити Django applications: user, book, purchase. Додати інформацію про ці apps в INSTALLED_APPS (settings.py)

2. Створити моделі User, Book, Purchase у відповідних applications. Структура та звʼязки таблиць мають бути такими ж,
    як і в попередніх домашніх завданнях.

3. Створити необхідні міграції

4. Створити найпростіші views для кожного із application. Кожен із них має повертати всі записи із відповідної таблиці
    в базі даних у форматі json.
    Створити відповідні налаштування urls:
     - GET users/
     - GET books/
     - GET purchases/

5. (необов'язкове виконання) Модифікувати моделі наступним чином:

        В Book title та author разом мають бути унікальними. Тобто, не може бути 2х однакових книжок для одного і
        того ж автора.
        В Purchase змінити порядок сортування на сортування за датою у порядку спадання.

    Для цих модифікацій мають бути створені окремі міграції, додатково до тих, що створені відповідно до завдання 3.

========================================================================================================================

    Homework 40.

1. Для існуючих моделей створити конфігурацію для відображення в Django Admin. Таблиці в Django Admin мають відображати
    всі атрибути обʼєктів.

2. Перевизначити метод str існуючих моделей, надавши назвам обʼєктів більш читабельний вигляд. Наприклад, замість
    відображення "User object(1)" має відображатися "1: Test User"

========================================================================================================================

    Homework 41.

1. Для кожної існуючої моделі замінити найпростіші view функції на класи (class based views), зареєструвати відповідні url.

    Для кожної моделі має бути реалізований функціонал отримання списку обʼєктів (наприклад, GET /users) та отримання
    одного обʼєкту за id (наприклад, GET /users/<int:id>).

    Дані необхідно відрендерити за допомогою HTML темплейтів.

2. Реалізувати функціонал створення нових обʼєктів, створивши відповідні views та зареєструвавши відповідні url.

    Створити відповідні форми, що мають бути використані для створення обʼєктів.

========================================================================================================================

    Homework 42.

1. До існуючого Django проєкту встановити Django REST Framework та оновити налаштування відповідним чином.

2. Для всіх існуючих моделей створити відповідні Serializers.

========================================================================================================================
